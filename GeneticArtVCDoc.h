// GeneticArtVCDoc.h : interface of the CGeneticArtVCDoc class
//


#pragma once

#include "PixelArtist/PAPop.h"
#include "LGPConfig/LGPConfig.h"
#include "AppTypes.h"
#include "Viewport.h"
#include "XSButton.h"

class CGeneticArtVCDoc : public CDocument, public PAPop
{
protected: // create from serialization only
	CGeneticArtVCDoc();
	DECLARE_DYNCREATE(CGeneticArtVCDoc)

// Attributes
public:

// Operations
public:

// Overrides
public:
	virtual BOOL OnNewDocument();
	virtual void Serialize(CArchive& ar);

// Implementation
public:
	virtual ~CGeneticArtVCDoc();
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

protected:

// Generated message map functions
protected:
	DECLARE_MESSAGE_MAP()
	LGPConfig m_lgp_configuration_file;
public:
	// this method is called by CGeneticArtVCView::OnSize() when the window is resized
	virtual void OnSize(const CRect& client_rect);
protected:
	// image buffer on which the various images are drawn and flip to the view's CDC
	CImage m_buffer;
	// viewports that shows the thumb nails of the images generated by lgp programs
	ViewportGroup m_thumbnails;
	// button group
	std::vector<CXSButton*> m_commands;
	// number of rows of thumbnails. 
	unsigned int m_thumbnail_rows;
	// number of cols of thumbnails
	unsigned int m_thumbnail_cols;
	// thumbnail view dimension parameters
	double mThumbnailViewLeft;
	double mThumbnailViewTop;
	double mThumbnailViewWidth;
	double mThumbnailViewHeight;
	double mThumbnailGapH;
	double mThumbnailGapV;
	double mIncubatorViewLeft;
	double mIncubatorViewTop;
	double mIncubatorViewWidth;
	double mIncubatorViewHeight;
	double mIncubatorPortLeft;
	double mIncubatorPortTop;
	double mIncubatorPortWidth;
	double mIncubatorPortHeight;
	double mCommandViewLeft;
	double mCommandViewTop;
	double mCommandViewWidth;
	double mCommandViewHeight;
	bool mLoadFromScripts;
	CString mIncubatorText;
	CString mGPText;
	CString mCmdEvolve;
	CString mCmdRunScript;
	CString mCmdRefresh;
public:
	virtual void Render(CDC* pDC , const CRect& client_rect);
protected:
	// paint the background of the client rect
	virtual void RenderBackground(CDC* pDC , const CRect& client_rect);
	// render the thumbnail view window
	virtual void RenderThumbnailView(CDC* pDC, const CRect& client_rect);
	// render the command view window
	virtual void RenderCommandView(CDC* pDC, const CRect& client_rect);
	// get the absolute rectangle of the command view
	CRect GetCommandRect(const CRect& client_rect);
public:
	// called by CGeneticArtVCView::OnMouseMove
	virtual bool OnMouseMove(UINT nFlags, const CRect& client_rect, CPoint point);
protected:
	// the current thumbnail that has mouse over
	CViewport* m_pHoverThumbnail;
	virtual void RenderIncubatorView(CDC* pDC, const CRect& client_rect);
	//CViewport* m_incubator_port;
public:
	virtual bool OnLButtonDown(UINT nFlags, const CRect& client_rect, CPoint point);
	afx_msg void OnEvolutionEvolve();
	bool OnLButtonDbClk(int nFlags, const CRect& client_rect, CPoint point);
	afx_msg void OnEvolutionRunscript();
	afx_msg void OnConfigurationLgpconfig();
	afx_msg void OnUpdateConfigurationLgpconfig(CCmdUI *pCmdUI);
protected:
	void CreateThumbnails(void);
public:
	afx_msg void OnLgpconfigEvolutionconfig();
	afx_msg void OnLgpconfigMicromutationconfig();
	afx_msg void OnFileOpen();
};


